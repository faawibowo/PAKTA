generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model AIContractDraft {
  id           Int    @id @default(autoincrement())
  companyName  String
  contractType String
  duration     Int
  content      Json
  status       String
  userId       Int
  User         User   @relation(fields: [userId], references: [id])
}

model Contract {
  id                 Int                  @id @default(autoincrement())
  title              String
  parties            String
  category           String
  status             ContractStatus
  value              Float
  startDate          DateTime
  endDate            DateTime
  uploadedAt         DateTime             @default(now())
  fileUrl            String
  contractData       Json
  userId             Int
  User               User                 @relation(fields: [userId], references: [id])
  ContractValidation ContractValidation[]
}

model ContractValidation {
  id             Int      @id @default(autoincrement())
  contractId     Int
  mandatoryElems Json
  riskDetected   Json
  analysisDate   DateTime @default(now())
  Contract       Contract @relation(fields: [contractId], references: [id])
}

model User {
  id              Int               @id @default(autoincrement())
  username        String            @unique
  email           String            @unique
  oauthProvider   String?
  oauthId         String?
  role            UserRole          @default(INTERNAL)
  password        String
  AIContractDraft AIContractDraft[]
  Contract        Contract[]
}

enum UserRole {
  MANAGEMENT
  LAW
  INTERNAL
}

enum ContractStatus {
  ACTIVE
  EXPIRED
  PENDING
}
